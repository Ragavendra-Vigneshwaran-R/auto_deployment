name: PrintIP
on:
  push:
    branches:
      - develop
  workflow_dispatch:
jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG" | base64 -d > ~/.kube/config
        env:
          KUBECONFIG: ${{ secrets.SHARED_EKS_KUBE_CONFIG }}
      - name: Set up kubectl
        run: |
          ./automation-scripts/installkubectl.sh  
      - name: Install aws-iam-authenticator
        run: |
          sudo curl -L https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.3/aws-iam-authenticator_0.5.3_linux_amd64 -o /usr/local/bin/aws-iam-authenticator
          sudo chmod +x /usr/local/bin/aws-iam-authenticator
      - name: Authenticate with EKS cluster
        run: |
          aws-iam-authenticator token -i ${{ secrets.SHARED_EKS_NAME }} | sed -e 's/^ *//' | jq -r '.status + " " + .token' | {
            read -r status token
            if [[ "$status" == "Success" ]]; then
              export AWS_SESSION_TOKEN=$(echo $token | jq -r .sessionToken)
              export AWS_ACCESS_KEY_ID=$(echo $token | jq -r .accessKeyId)
              export AWS_SECRET_ACCESS_KEY=$(echo $token | jq -r .secretAccessKey)
            else
              echo "Failed to authenticate with EKS cluster: $status"
              exit 1
            fi
          }

      - name: Install Helm
        run: |
          ./automation-scripts/installhelm.sh  
      - name: Install Keda
        run: |
          ./automation-scripts/install_keda.sh
      
          
