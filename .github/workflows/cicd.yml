name: Deploy_CICD
on:
  workflow_dispatch:
    inputs:
      dockerimage:
        description: "Docker Image of your application"
        required: true
        type: string
      namespace:
        description: "Namespace of the application"
        required: true
        type: string
jobs:
  Install Dependency:
    name: Install Dependency
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Set up kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.SHARED_EKS_REGION }} --name ${{ secrets.SHARED_EKS_NAME }}
      - name: Set up kubectl
        run: |
          ./automation-scripts/installation_scripts/installkubectl.sh
      - name: Install Helm
        run: |
          ./automation-scripts/installation_scripts/installhelm.sh
      - name: Clone github files to runner
        run: |
          ./automation-scripts/cloning_scripts/clonerepo.sh
      - name: Install ArgoCD
        run: |
          ./automation-scripts/installation_scripts/install_argocd.sh
  Actual Deployment:
    name: Actual Deployment
    runs-on: self-hosted
    steps:
      - name: Deploy the application with ArgoCD
        run: |
          ./automation-scripts/deployment_scripts/deploy_cicd.sh --dockerimage ${{ inputs.dockerimage }} --namespace ${{ inputs.namespace }}
  Output:
    name: Output
    runs-on: self-hosted
    steps:
      - name: ArgoCD
        run: |
          output=$(~/auto_deployment/automation-scripts/output_scripts/getcicd.sh)
          echo -e "$output"
      - name: Domain
        run: |
          domain=$(./automation-scripts/output_scripts/getdomain.sh --namespace ${{ inputs.namespace }})
          echo -e "$domain"
  Delete Dependices:
    name: Delete Dependices
    runs-on: self-hosted
    steps:
      - name: Remove github files
        run: |
          rm -rf ~/auto_deployment/