name: PrintIP
on:
  push:
    branches:
      - develop
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EKS_CLUSTER_NAME: ${{ secrets.SHARED_EKS_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Install kubectl
        run: |
          sudo apt-get update && sudo apt-get install -y apt-transport-https gnupg2
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl

      - name: Install helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Authenticate with EKS cluster
        id: eks-auth
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
          aws-iam-authenticator token -i $EKS_CLUSTER_NAME | jq -r '.status.token' | awk '{print "Authorization: Bearer " $1}' > /tmp/token
          kubectl config set-credentials eks-user --token="$(cat /tmp/token)"
          kubectl config set-context eks-context --cluster="$(kubectl config current-context)" --user=eks-user --namespace=default
          kubectl config use-context eks-context

      - name: Deploy to EKS cluster
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          ./automation-scripts/install_keda.sh

      
          
